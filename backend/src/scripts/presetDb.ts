import { env } from '../lib/env'
import { type AppContext } from '../lib/ctx'
import { getPasswordHash } from '../utils/getPasswordHash'

export const presetDb = async (ctx: AppContext) => {
//   // –°–æ–∑–¥–∞–Ω–∏–µ –∞–¥–º–∏–Ω –∞–∫–∫–∞—É–Ω—Ç–∞
//   await ctx.prisma.user.upsert({
//     where: {
//       email: 'admin@example.com',
//     },
//     create: {
//       name: 'admin',
//       email: 'admin@example.com',
//       password: getPasswordHash(env.INITIAL_ADMIN_PASSWORD),
//       permissions: ['ALL'],
//     },
//     update: {
//       permissions: ['ALL'],
//     },
//   })

//   // –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∏ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–π
//   const categoriesData = [
//     {
//       name: 'üöó –ê–≤—Ç–æ',
//       sequence: '1',
//       subcategories: [
//         { name: '–ê–≤—Ç–æ–º–æ–±–∏–ª–∏', sequence: '1' },
//         { name: '–ú–æ—Ç–æ—Ü–∏–∫–ª—ã –∏ –º–æ—Ç–æ—Ç–µ—Ö–Ω–∏–∫–∞', sequence: '2' },
//         { name: '–ó–∞–ø—á–∞—Å—Ç–∏ –∏ –∞–∫—Å–µ—Å—Å—É–∞—Ä—ã', sequence: '3' },
//         { name: '–®–∏–Ω—ã, –¥–∏—Å–∫–∏ –∏ –∫–æ–ª—ë—Å–∞', sequence: '4' },
//         { name: '–ì—Ä—É–∑–æ–≤–∏–∫–∏ –∏ —Å–ø–µ—Ü—Ç–µ—Ö–Ω–∏–∫–∞', sequence: '5' },
//         { name: '–í–æ–¥–Ω—ã–π —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç', sequence: '6' },
//         { name: '–ü—Ä–æ—á–∏–π —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç', sequence: '7' },
//       ]
//     },
//     {
//       name: 'üè¢ –ù–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å',
//       sequence: '2',
//       subcategories: [
//         { name: '–ê—Ä–µ–Ω–¥–∞ –∫–≤–∞—Ä—Ç–∏—Ä—ã', sequence: '1' },
//         { name: '–ü—Ä–æ–¥–∞–∂–∞ –∫–≤–∞—Ä—Ç–∏—Ä—ã', sequence: '2' },
//         { name: '–ê—Ä–µ–Ω–¥–∞ –¥–æ–º–∞', sequence: '3' },
//         { name: '–ü—Ä–æ–¥–∞–∂–∞ –¥–æ–º–∞', sequence: '4' },
//         { name: '–ö–æ–º–º–µ—Ä—á–µ—Å–∫–∞—è –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å', sequence: '5' },
//         { name: '–ó–µ–º–µ–ª—å–Ω—ã–µ —É—á–∞—Å—Ç–∫–∏', sequence: '6' },
//         { name: '–ü—Ä–æ—á–∏–µ —Å—Ç—Ä–æ–µ–Ω–∏—è', sequence: '7' },
//       ]
//     },
//     {
//       name: 'üíª –≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞',
//       sequence: '3',
//       subcategories: [
//         { name: '–¢–µ–ª–µ—Ñ–æ–Ω—ã –∏ –ø–ª–∞–Ω—à–µ—Ç—ã', sequence: '1' },
//         { name: '–ö–æ–º–ø—å—é—Ç–µ—Ä—ã –∏ –Ω–æ—É—Ç–±—É–∫–∏', sequence: '2' },
//         { name: '–ê–∫—Å–µ—Å—Å—É–∞—Ä—ã –∏ –∫–æ–º–ø–ª–µ–∫—Ç—É—é—â–∏–µ', sequence: '3' },
//         { name: '–§–æ—Ç–æ, –∞—É–¥–∏–æ, –≤–∏–¥–µ–æ', sequence: '4' },
//         { name: '–ü—Ä–æ—á–∞—è —ç–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞', sequence: '5' },
//       ]
//     },
//     {
//       name: 'üíº –†–∞–±–æ—Ç–∞',
//       sequence: '4',
//       subcategories: [
//         { name: '–í–∞–∫–∞–Ω—Å–∏–∏', sequence: '1' },
//         { name: '–†–µ–∑—é–º–µ', sequence: '2' },
//       ]
//     },
//     {
//       name: 'üõ†Ô∏è –£—Å–ª—É–≥–∏',
//       sequence: '5',
//       subcategories: [
//         { name: '–†–µ–º–æ–Ω—Ç –∏ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ', sequence: '1' },
//         { name: '–ê–≤—Ç–æ—Å–µ—Ä–≤–∏—Å', sequence: '2' },
//         { name: '–ö—Ä–∞—Å–æ—Ç–∞ –∏ –∑–¥–æ—Ä–æ–≤—å–µ', sequence: '3' },
//         { name: '–§–æ—Ç–æ –∏ –≤–∏–¥–µ–æ', sequence: '4' },
//         { name: '–î–æ—Å—Ç–∞–≤–∫–∞ –∏ –ø–µ—Ä–µ–µ–∑–¥', sequence: '5' },
//         { name: '–£–±–æ—Ä–∫–∞ –∏ –∫–ª–∏–Ω–∏–Ω–≥', sequence: '6' },
//         { name: '–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –∏ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏', sequence: '7' },
//       ]
//     },
//     {
//       name: 'üëñ –õ–∏—á–Ω—ã–µ –≤–µ—â–∏',
//       sequence: '6',
//       subcategories: [
//         { name: '–ñ–µ–Ω—Å–∫–∏–π –≥–∞—Ä–¥–µ—Ä–æ–±', sequence: '1' },
//         { name: '–ú—É–∂—Å–∫–æ–π –≥–∞—Ä–¥–µ—Ä–æ–±', sequence: '2' },
//         { name: '–¢–æ–≤–∞—Ä—ã –¥–ª—è –¥–µ—Ç–µ–π', sequence: '3' },
//       ]
//     },
//     {
//       name: 'üè† –î–ª—è –¥–æ–º–∞ –∏ –¥–∞—á–∏',
//       sequence: '7',
//       subcategories: [
//         { name: '–ë—ã—Ç–æ–≤–∞—è —Ç–µ—Ö–Ω–∏–∫–∞', sequence: '1' },
//         { name: '–ú–µ–±–µ–ª—å –∏ –∏–Ω—Ç–µ—Ä—å–µ—Ä', sequence: '2' },
//         { name: '–°—Ç—Ä–æ–π–º–∞—Ç–µ—Ä–∏–∞–ª—ã', sequence: '3' },
//         { name: '–°–∞–¥ –∏ –æ–≥–æ—Ä–æ–¥', sequence: '4' },
//         { name: '–•–æ–∑—Ç–æ–≤–∞—Ä—ã –∏ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å', sequence: '5' },
//         { name: '–ü—Ä–æ–¥—É–∫—Ç—ã –ø–∏—Ç–∞–Ω–∏—è', sequence: '6' },
//       ]
//     },
//     {
//       name: 'üéæ –•–æ–±–±–∏ –∏ –æ—Ç–¥—ã—Ö',
//       sequence: '8',
//       subcategories: [
//         { name: '–†–∞–∑–Ω–æ–µ', sequence: '1' },
//       ]
//     },
//     {
//       name: 'üêï –ñ–∏–≤–æ—Ç–Ω—ã–µ',
//       sequence: '9',
//       subcategories: [
//         { name: '–î–æ–º–∞—à–Ω–∏–µ', sequence: '1' },
//         { name: '–°–µ–ª—å—Å–∫–æ—Ö–æ–∑—è–π—Å—Ç–≤–µ–Ω–Ω—ã–µ', sequence: '2' },
//       ]
//     },
//     {
//       name: 'üí∞ –ë–∏–∑–Ω–µ—Å –∏ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ',
//       sequence: '10',
//       subcategories: [
//         { name: '–ì–æ—Ç–æ–≤—ã–π –±–∏–∑–Ω–µ—Å', sequence: '1' },
//         { name: '–û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ –∏ –º–∞—Ç–µ—Ä–∏–∞–ª—ã', sequence: '2' },
//       ]
//     }
//   ]

//   // –°–æ–∑–¥–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏
//   for (const categoryData of categoriesData) {
//     const category = await ctx.prisma.category.create({
//       data: {
//         name: categoryData.name,
//         sequence: categoryData.sequence,
//       }
//     })

//     // –°–æ–∑–¥–∞–µ–º –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è –∫–∞–∂–¥–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
//     for (const subcategoryData of categoryData.subcategories) {
//       await ctx.prisma.subcategory.create({
//         data: {
//           name: subcategoryData.name,
//           sequence: subcategoryData.sequence,
//           categoryId: category.id,
//         }
//       })
//     }

//     // –°–æ–∑–¥–∞–Ω–∏–µ 1000 —Ç–µ—Å—Ç–æ–≤—ã—Ö –æ–±—ä—è–≤–ª–µ–Ω–∏–π
// const cities = ['–ú–æ—Å–∫–≤–∞', '–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥', '–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫', '–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥', '–ö–∞–∑–∞–Ω—å', '–ù–∏–∂–Ω–∏–π –ù–æ–≤–≥–æ—Ä–æ–¥', '–ß–µ–ª—è–±–∏–Ω—Å–∫', '–°–∞–º–∞—Ä–∞', '–û–º—Å–∫', '–†–æ—Å—Ç–æ–≤-–Ω–∞-–î–æ–Ω—É']
// const titles = [
//   '–ù–∞–∑–≤–∞–Ω–∏–µ 1',
//   '–ù–∞–∑–≤–∞–Ω–∏–µ 2',
//   '–ù–∞–∑–≤–∞–Ω–∏–µ 3',
//   '–ù–∞–∑–≤–∞–Ω–∏–µ 4',
//   '–ù–∞–∑–≤–∞–Ω–∏–µ 5' 
// ]
// const descriptions = [
//   '–û–ø–∏—Å–∞–Ω–∏–µ 1',
//   '–û–ø–∏—Å–∞–Ω–∏–µ 2',
//   '–û–ø–∏—Å–∞–Ω–∏–µ 3',
//   '–û–ø–∏—Å–∞–Ω–∏–µ 4',
//   '–û–ø–∏—Å–∞–Ω–∏–µ 5'
// ]

// // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏–∑ –±–∞–∑—ã
// const allCategories = await ctx.prisma.category.findMany({
//   include: {
//     subcategories: true
//   }
// })

// // –°–æ–∑–¥–∞–µ–º –º–∞—Å—Å–∏–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–º–æ–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö)
// const testUsers = await ctx.prisma.user.findMany({
//   take: 10,
//   where: {
//     email: {
//       not: 'admin@example.com'
//     }
//   }
// })

// // –ï—Å–ª–∏ –Ω–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, —Å–æ–∑–¥–∞–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ
// if (testUsers.length === 0) {
//   for (let i = 1; i <= 5; i++) {
//     const user = await ctx.prisma.user.create({
//       data: {
//         name: `TestUser${i}`,
//         email: `test${i}@example.com`,
//         password: getPasswordHash('password123'),
//         phone: `+7916123456${i}`
//       }
//     })
//     testUsers.push(user)
//   }
// }

// // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–ª—É—á–∞–π–Ω–æ–≥–æ —á–∏—Å–ª–∞ –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ
// const getRandomInt = (min: number, max: number) => {
//   return Math.floor(Math.random() * (max - min + 1)) + min
// }

// // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–ª—É—á–∞–π–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –∏–∑ –º–∞—Å—Å–∏–≤–∞
// const getRandomItem = (array: any[]) => {
//   return array[Math.floor(Math.random() * array.length)]
// }

// // –°–æ–∑–¥–∞–µ–º 1000 –æ–±—ä—è–≤–ª–µ–Ω–∏–π
// for (let i = 0; i < 1000; i++) {
//   // –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é
//   const randomCategory = getRandomItem(allCategories)
  
//   // –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω—É—é –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—é –∏–∑ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
//   const randomSubcategory = getRandomItem(randomCategory.subcategories)
  
//   // –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
//   const randomUser = getRandomItem(testUsers)
  
//   // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–ª—É—á–∞–π–Ω—É—é —Ü–µ–Ω—É –æ—Ç 1000 –¥–æ 1000000
//   const randomPrice = getRandomInt(1000, 1000000).toString()
  
//   // –°–æ–∑–¥–∞–µ–º –æ–±—ä—è–≤–ª–µ–Ω–∏–µ
//   await ctx.prisma.ad.create({
//     data: {
//       categoryId: randomCategory.id,
//       subcategoryId: randomSubcategory.id,
//       title: getRandomItem(titles),
//       description: getRandomItem(descriptions),
//       price: randomPrice,
//       city: getRandomItem(cities),
//       images: [], // –ü—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –¥–ª—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –æ–±—ä—è–≤–ª–µ–Ω–∏–π
//       authorId: randomUser.id
//     }
//   })
  
//   // –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–±–æ–ª—å—à—É—é –∑–∞–¥–µ—Ä–∂–∫—É —á—Ç–æ–±—ã –Ω–µ –ø–µ—Ä–µ–≥—Ä—É–∂–∞—Ç—å –±–∞–∑—É
//   if (i % 100 === 0) {
//     await new Promise(resolve => setTimeout(resolve, 100))
//   }
// }

// console.log('–°–æ–∑–¥–∞–Ω–æ 1000 —Ç–µ—Å—Ç–æ–≤—ã—Ö –æ–±—ä—è–≤–ª–µ–Ω–∏–π')
//   }
}